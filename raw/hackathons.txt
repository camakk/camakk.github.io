Hackathons are the wild west of innovation - learning to be a cowboy


The Hackathon Spirit

I participated in my first hackathon in 2011.  Back then, no one knew they were going to be called hackathons


I've been asked countless times by countless individuals what a "hackathon" is.  Do you hack into a government together?  Do you test computer security by all attacking a system at the same time?

Alas, the "hacking" that we're talking about in the context of a hackathon is very different from the computer hacking popularized in media.  Really, the world "hack" should be understood as synonymous with the term "make".  Refering to these events as "makeathons" might be more accurate in describing their function, but "hackathon" has become the colloquoial standard because of the element of mystique it brings.

Hackathons are gatherings of computer programmers, developers, artists, sounds people, designers, etc. (anyone you might need in the process of developing a tech product).  At these gatherings, the "hackers" either form teams with people they just met or come with a preformed team of 2-4 people.  Over the course of the hackathon, each hackathon team is tasked with putting together a project.

A good 90% of typical hackathon projects are computer science/programming projects.  Not too surprising considering how easy it is to develop these projects using only a laptop. When you're traveling a long distance (sometimes a 14 hour bus ride!!) to attend a hackathon, you want to pack light.

The other 10% of hackathon projects usually include electrical engineering/circuits projects that have a physical aspect as well as a programming aspect.  The buzzword here is "IoT" which means Internet of Things, which is a fancy way of saying "ordinary things that have Internet/smart capabilities".  Control your toaster from an app on your phone? Yup, that's an IoT project.

An aside - the accumulation of colloquial terminology from hackathons is immense.  I didn't know what it meant when I met a full-stack developer who built a node backend supported through AWS for his web app.  Check out this page for my attempt to provide simple explanations for many of the terms you'll hear at your first hackathon.

An essential piece of hackathon culture is how nonstop these events are. If teams know they have 36 hours between starting the project and ending the project, they will rarely allocate hours for sleep.  It's definitely terrible for your health, but it's a commonly accepted practice. Why? One all-nighter doesn't kill you. And when you do it with friends, it becomes a bonding experience.

At the end of the 36 hours, all of the projects are judged by professionals brought in from the outside (usually from sponsor companies) and winners are chosen.  The prizes range from cool gadgets for the winners to full-on internship offers from companies if they like what they see.


What about the philosophy?  Here it is: hackathons aim to distill two steps of the product development cycle: the idea and the proof of concept.  For simplicity, I'll call these the what (proof of concept) and the why (the idea).

This is essential for any first-time hackathon goer to understand.  You're not trying to launch a billion dollar company.  You're looking for a new or better way to use technology, then build enough of a prototype to convince the judges to believe in your vision.  Half of the presentation at the end of the hackathon is the what - the other half is the why.  Th

Ideas don't come out of forced concentrated brainstorming sessions. Usually, they come from spontanaeity. The best ideas are the ones that defy intuition when they are first conceived, but after time show their true colors.  Paul Graham's essay about good ideas that look like bad ideas is particularly pertinent in this case.

Don't go to a hackathon to build something obvious. If you're comfortable with your idea, it's not a good idea.  Break new ground at a hackathon. Cook with reckless abandon. Remember, there are no stakes!  No grades, no managers, no one to criticize you if you fail.  Hackathons are the wild west of innovation.

Why do they work? You have time pressure, you have peer pressure, and you have the allure of prizes.

